##############################################################################
##                                                                          ##
##  SORCER Network Shell (nsh) Classloading Configuration                   ##
##                                                                          ##
##############################################################################
##
## Note: do not add classes from java.lang here. No rt.jar and on some
##       platforms no tools.jar
##
## load file://file.jar - specifies a local file, you may use system properties or wildcards in the path, i.e:
## load file://!{user.home}/.nsh/lib/*.jar
## load mvn://groupId:Artifact:[version] - specifies local jar file to loaded from local maven repository using artifact coordinates in the format:
## load mvn://groupId:Artifact:[version]@host:port - specifies a jar file on a remote maven repository
## load http:// - specifies remote jar file using a direct URL
## load artifact:groupId/Artifact/version

## Examples of how you can specify a jar to be loaded
## Possible ways of specifying libraries
## load mvn://org.sorcersoft.sorcer:ex6-api
## load mvn://org.sorcersoft.sorcer:ex6-api@192.168.0.15:8000
## load http://192.168.0.15:9000/sorcer/sorcer-api.jar
## load file://!{user.home}/.nsh/lib/*.jar
## load artifact:org.sorcersoft.sorcer/ex6-api/1.0-M5-SNAPSHOT

## You can also specify the codebase that will be shared for all scripts that you invoke, however,
## during the startup of the shell the internal webster is not yet running therefore only
## urls to external websters are supported in the following format:
##
## codebase mvn://groupId:Artifact:[version]@host:port - specifies a jar file on a remote maven repository
##          You can omit the @host:port only if your environment points to a running webster URL
## codebase http:// - specifies remote jar file using a direct URL
##
# Needed to interpret netlet scripts
load artifact:org.sorcersoft.sorcer/commons-req/1.0-M5-SNAPSHOT
load mvn://org.sorcersoft.sorcer:sos-api
load mvn://org.sorcersoft.sorcer:sos-netlet
load mvn://org.sorcersoft.sorcer:sos-shell
load mvn://org.rioproject:rio-api
load mvn://org.rioproject:rio-lib
load mvn://commons-io:commons-io:2.4
load mvn://org.rioproject:rio-platform
load mvn://com.sorcersoft.river:jsk-platform

#load mvn://org.rioproject.resolver:resolver-api
#load mvn://org.sorcersoft.sorcer:sorcer-resolver
#load mvn://com.sorcersoft.river:serviceui
#load mvn://org.sorcersoft.sorcer:sos-platform
#load mvn://org.sorcersoft.sorcer:sos-webster
#load mvn://org.sorcersoft.sorcer:sorcer-api
#load mvn://org.sorcersoft.sorcer:dbp-api
#load mvn://com.sorcersoft.river:jsk-dl
#load mvn://com.sorcersoft.river:jsk-lib
#load mvn://org.sorcersoft.sorcer:sos-util
#load mvn://org.rioproject.resolver:resolver-api
#load mvn://org.codehaus.groovy:groovy-all
#load mvn://org.sorcersoft.sorcer:sorcer-resolver
#load mvn://org.codehaus.plexus:plexus-utils

    # tools.jar for ant tasks
    # load file://${tools.jar}
    # load required libraries
    # codebase mvn://org.sorcersoft.sorcer:ex2-api@192.168.0.10:50001
    # load user specific libraries
    # load file://!{user.home}/.nsh/lib/*.jar
